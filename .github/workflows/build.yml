name: Go package

on: [push]

jobs:
  setup-ollama:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Cache Ollama
        id: cache-ollama
        uses: actions/cache@v3
        with:
          path: |
            ollama
            .ollama
          key: ${{ runner.os }}-ollama

      - name: Build ollama
        if: steps.cache-ollama.outputs.cache-hit != 'true'
        run: git clone --recursive https://github.com/jmorganca/ollama && cd ollama && go generate ./... && go build -v

      - name: Test the ollama executable
        run: ollama/ollama --help

  run-model:
    needs: setup-ollama
    runs-on: ubuntu-latest
    strategy:
      matrix:
        model:
          - 'llama2:chat'
          - 'llama2:text'
          #- 'mistral:7b-text'
          #- 'mistral:7b-instruct'
          #- 'wizardlm-uncensored:13b'
          #- 'codeup:13b-llama2-chat'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run ollama in the background
        run: ollama/ollama serve &

      - name: Pull an image
        run: ollama/ollama pull ${{ matrix.model }}

      - name: Generate a poem
        run: ollama/ollama run ${{ matrix.model }} "$(cat prompt.txt)" > ${{ matrix.model | replace(':', '_') | replace('-', '_') }}_result.txt

      - name: Output the poem
        run: cat ${{ matrix.model | replace(':', '_') | replace('-', '_') }}_result.txt
